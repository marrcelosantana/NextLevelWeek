{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marcelo/Documentos/Codigos/NextLevelWeek/moveit-next/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport challenges from '../../challenges.json';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play;\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio!', {\n        body: \"Valendo \".concat(challenge.amount, \"xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      experienceToNextLevel: experienceToNextLevel,\n      completeChallenge: completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"JLgiy402OkkjB+ZJ0nG6FI7h+Rs=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/home/marcelo/Documentos/Codigos/NextLevelWeek/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAA6CC,SAA7C,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAwBA,OAAO,IAAMC,iBAAiB,gBAAGJ,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASK,kBAAT,OAAkE;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;;AAAA,kBAEzCL,QAAQ,CAAC,CAAD,CAFiC;AAAA,MAE7DM,KAF6D;AAAA,MAEtDC,QAFsD;;AAAA,mBAGjBP,QAAQ,CAAC,CAAD,CAHS;AAAA,MAG7DQ,iBAH6D;AAAA,MAG1CC,oBAH0C;;AAAA,mBAIbT,QAAQ,CAAC,CAAD,CAJK;AAAA,MAI7DU,mBAJ6D;AAAA,MAIxCC,sBAJwC;;AAAA,mBAKrBX,QAAQ,CAAC,IAAD,CALa;AAAA,MAK7DY,eAL6D;AAAA,MAK5CC,kBAL4C;;AAOrE,MAAMC,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACV,KAAK,GAAG,CAAT,IAAe,CAAxB,EAA2B,CAA3B,CAA9B;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACZgB,IAAAA,YAAY,CAACC,iBAAb;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASC,OAAT,GAAkB;AACdZ,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAEH,WAASc,iBAAT,GAA4B;AACxB,QAAMC,oBAAoB,GAAGN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACQ,MAAL,KAAgBrB,UAAU,CAACsB,MAAtC,CAA7B;AACA,QAAMC,SAAS,GAAGvB,UAAU,CAAEmB,oBAAF,CAA5B;AAEAR,IAAAA,kBAAkB,CAAEY,SAAF,CAAlB;AAEA,QAAIC,KAAJ,CAAU,mBAAV,EAA+BC,IAA/B;;AAEA,QAAGV,YAAY,CAACW,UAAb,KAA4B,SAA/B,EAAyC;AACrC,UAAIX,YAAJ,CAAiB,eAAjB,EAAiC;AAC7BY,QAAAA,IAAI,oBAAcJ,SAAS,CAACK,MAAxB;AADyB,OAAjC;AAGH;AACJ;;AAED,WAASC,cAAT,GAAyB;AACrBlB,IAAAA,kBAAkB,CAAE,IAAF,CAAlB;AACH;;AAED,WAASmB,iBAAT,GAA4B;AACxB,QAAG,CAACpB,eAAJ,EAAoB;AAChB;AACH;;AAHuB,QAKhBkB,MALgB,GAKLlB,eALK,CAKhBkB,MALgB;AAOxB,QAAIG,eAAe,GAAGzB,iBAAiB,GAAGsB,MAA1C;;AAEA,QAAIG,eAAe,IAAInB,qBAAvB,EAA8C;AAC1CmB,MAAAA,eAAe,GAAGA,eAAe,GAAGnB,qBAApC;AACAK,MAAAA,OAAO;AACV;;AAEDV,IAAAA,oBAAoB,CAAEwB,eAAF,CAApB;AACApB,IAAAA,kBAAkB,CAAE,IAAF,CAAlB;AACAF,IAAAA,sBAAsB,CAAED,mBAAmB,GAAG,CAAxB,CAAtB;AACH;;AAGD,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AACI,IAAA,KAAK,EAAI;AACLJ,MAAAA,KAAK,EAALA,KADK;AAELE,MAAAA,iBAAiB,EAAjBA,iBAFK;AAGLE,MAAAA,mBAAmB,EAAnBA,mBAHK;AAILS,MAAAA,OAAO,EAAPA,OAJK;AAKLC,MAAAA,iBAAiB,EAAjBA,iBALK;AAMLR,MAAAA,eAAe,EAAfA,eANK;AAOLmB,MAAAA,cAAc,EAAdA,cAPK;AAQLjB,MAAAA,qBAAqB,EAArBA,qBARK;AASLkB,MAAAA,iBAAiB,EAAjBA;AATK,KADb;AAAA,cAaK3B;AAbL;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAzEeD,kB;;KAAAA,kB","sourcesContent":["import { createContext, useState, ReactNode, useEffect } from 'react';\nimport challenges from '../../challenges.json';\n\ninterface Challenge {\n    type: 'body' | 'eye';\n    description: string;\n    amount: number;\n}\n\ninterface ChallengesContextData{\n    level: number;\n    currentExperience: number;\n    experienceToNextLevel: number;\n    challengesCompleted: number;\n    activeChallenge: Challenge;\n    levelUp: () => void;\n    startNewChallenge: () => void;\n    resetChallenge: () => void;\n    completeChallenge: () => void;   \n}\n\ninterface ChallengesProviderProps {\n    children: ReactNode;\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData);\n\nexport function ChallengesProvider({ children }: ChallengesProviderProps){\n\n    const [ level, setLevel ] = useState(1);\n    const [ currentExperience, setCurrentExperience ] = useState(0);\n    const [ challengesCompleted, setChallengesCompleted ] = useState(0);\n    const [ activeChallenge, setActiveChallenge ] = useState(null);\n\n    const experienceToNextLevel = Math.pow((level + 1 ) * 4 ,2);\n\n    useEffect(() => {\n        Notification.requestPermission();\n    }, []);\n\n    function levelUp(){   \n        setLevel(level + 1);\n      }\n\n    function startNewChallenge(){\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n        const challenge = challenges[ randomChallengeIndex ];\n\n        setActiveChallenge( challenge );\n\n        new Audio('/notification.mp3').play;\n\n        if(Notification.permission === 'granted'){\n            new Notification('Novo desafio!',{\n                body: `Valendo ${ challenge.amount }xp!`\n            })\n        }\n    }  \n\n    function resetChallenge(){\n        setActiveChallenge( null );\n    }\n\n    function completeChallenge(){\n        if(!activeChallenge){\n            return;\n        }\n\n        const { amount } = activeChallenge;\n\n        let finalExperience = currentExperience + amount;\n\n        if( finalExperience >= experienceToNextLevel ){\n            finalExperience = finalExperience - experienceToNextLevel;\n            levelUp();\n        }\n\n        setCurrentExperience( finalExperience );\n        setActiveChallenge( null );\n        setChallengesCompleted( challengesCompleted + 1 );\n    }\n\n\n    return(\n        <ChallengesContext.Provider \n            value = {{\n                level,\n                currentExperience,\n                challengesCompleted,\n                levelUp,\n                startNewChallenge,\n                activeChallenge,\n                resetChallenge,\n                experienceToNextLevel,\n                completeChallenge\n            }}\n        >\n            {children}\n        </ChallengesContext.Provider>\n    );\n}"]},"metadata":{},"sourceType":"module"}