{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marcelo/Documentos/Codigos/NextLevelWeek/moveit-next/src/contexts/CountdownContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { ChallengesContext } from \"./ChallengesContext\";\nexport var CountdownContext = /*#__PURE__*/createContext({});\nvar countdownTimeout;\nexport function CountdownProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useContext = useContext(ChallengesContext),\n      startNewChallenge = _useContext.startNewChallenge;\n\n  var _useState = useState(0.2 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.01 * 60);\n    setHasFinished(false);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time == 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(CountdownContext.Provider, {\n    value: {\n      minutes: minutes,\n      seconds: seconds,\n      hasFinished: hasFinished,\n      isActive: isActive,\n      startCountdown: startCountdown,\n      resetCountdown: resetCountdown\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountdownProvider, \"k8nIWpFDjoUAViuJM+FcSOd0MCI=\");\n\n_c = CountdownProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownProvider\");","map":{"version":3,"sources":["/home/marcelo/Documentos/Codigos/NextLevelWeek/moveit-next/src/contexts/CountdownContext.tsx"],"names":["createContext","useContext","useEffect","useState","ChallengesContext","CountdownContext","countdownTimeout","CountdownProvider","children","startNewChallenge","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","startCountdown","resetCountdown","clearTimeout","setTimeout"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAmCC,UAAnC,EAA+CC,SAA/C,EAA0DC,QAA1D,QAA0E,OAA1E;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAeA,OAAO,IAAMC,gBAAgB,gBAAGL,aAAa,CAAC,EAAD,CAAtC;AACP,IAAIM,gBAAJ;AAEA,OAAO,SAASC,iBAAT,OAAiE;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;;AAAA,oBAEtCP,UAAU,CAACG,iBAAD,CAF4B;AAAA,MAE5DK,iBAF4D,eAE5DA,iBAF4D;;AAAA,kBAI5CN,QAAQ,CAAC,MAAM,EAAP,CAJoC;AAAA,MAI7DO,IAJ6D;AAAA,MAIvDC,OAJuD;;AAAA,mBAKpCR,QAAQ,CAAC,KAAD,CAL4B;AAAA,MAK7DS,QAL6D;AAAA,MAKnDC,WALmD;;AAAA,mBAM9BV,QAAQ,CAAC,KAAD,CANsB;AAAA,MAM7DW,WAN6D;AAAA,MAMhDC,cANgD;;AAQpE,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMS,OAAO,GAAGT,IAAI,GAAG,EAAvB;;AAGA,WAASU,cAAT,GAAyB;AACrBP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,WAASQ,cAAT,GAAyB;AACrBC,IAAAA,YAAY,CAAChB,gBAAD,CAAZ;AACAO,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAC,OAAO,EAAR,CAAP;AACAI,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH;;AAEDb,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGU,QAAQ,IAAIF,IAAI,GAAG,CAAtB,EAAwB;AACpBJ,MAAAA,gBAAgB,GAAGiB,UAAU,CAAC,YAAM;AAChCZ,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,OAF4B,EAE1B,IAF0B,CAA7B;AAGH,KAJD,MAIM,IAAGE,QAAQ,IAAIF,IAAI,IAAI,CAAvB,EAAyB;AAC3BK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,MAAAA,iBAAiB;AACpB;AACJ,GAVQ,EAUN,CAACG,QAAD,EAAWF,IAAX,CAVM,CAAT;AAYA,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAI;AAChCM,MAAAA,OAAO,EAAPA,OADgC;AAEhCG,MAAAA,OAAO,EAAPA,OAFgC;AAGhCL,MAAAA,WAAW,EAAXA,WAHgC;AAIhCF,MAAAA,QAAQ,EAARA,QAJgC;AAKhCQ,MAAAA,cAAc,EAAdA,cALgC;AAMhCC,MAAAA,cAAc,EAAdA;AANgC,KAApC;AAAA,cAQMb;AARN;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAhDeD,iB;;KAAAA,iB","sourcesContent":["import { createContext, ReactNode, useContext, useEffect, useState } from \"react\";\nimport { ChallengesContext } from \"./ChallengesContext\";\n\ninterface CountdownContextData {\n    minutes: number;\n    seconds: number;\n    hasFinished: boolean;\n    isActive: boolean;\n    startCountdown:() => void;\n    resetCountdown:() => void;\n}\n\ninterface CountdownProviderProps {\n    children: ReactNode;\n}\n\nexport const CountdownContext = createContext({} as CountdownContextData);\nlet countdownTimeout: NodeJS.Timeout;\n\nexport function CountdownProvider({ children } : CountdownProviderProps){\n\n    const { startNewChallenge } = useContext(ChallengesContext);\n\n    const [time, setTime] = useState(0.2 * 60);\n    const [isActive, setIsActive] = useState(false);\n    const [hasFinished, setHasFinished] = useState(false);\n\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n\n\n    function startCountdown(){\n        setIsActive(true);\n    }\n\n    function resetCountdown(){\n        clearTimeout(countdownTimeout);\n        setIsActive(false);\n        setTime(0.01 * 60);\n        setHasFinished(false);\n    }\n\n    useEffect(() => {\n        if(isActive && time > 0){\n            countdownTimeout = setTimeout(() => {\n                setTime(time - 1);\n            }, 1000)\n        }else if(isActive && time == 0){\n            setHasFinished(true);\n            setIsActive(false);\n            startNewChallenge();\n        }\n    }, [isActive, time])\n\n    return(\n        <CountdownContext.Provider value = {{\n            minutes,\n            seconds,\n            hasFinished,\n            isActive,\n            startCountdown,\n            resetCountdown\n        }}>\n            { children }\n        </CountdownContext.Provider>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}