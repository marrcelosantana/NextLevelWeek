{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/marcelo/Documentos/Codigos/NextLevelWeek/moveit-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/marcelo/Documentos/Codigos/NextLevelWeek/moveit-next/src/components/Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { ChallengesContext } from '../contexts/ChallengesContext';\nimport styles from '../styles/components/Countdown.module.css';\nvar countdownTimeout;\nexport function Countdown() {\n  _s();\n\n  var contextData = useContext(ChallengesContext);\n  console.log(contextData);\n\n  var _useState = useState(0.1 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.1 * 60);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time == 0) {\n      setHasFinished(true);\n      setIsActive(false);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"\".concat(styles.countdownButton, \" \").concat(styles.countdownButtonActive),\n        onClick: resetCountdown,\n        children: \"Abandonar Ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Countdown, \"URT48WzqkRfsJAlZWo79UeGNqsA=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["/home/marcelo/Documentos/Codigos/NextLevelWeek/moveit-next/src/components/Countdown.tsx"],"names":["useState","useEffect","ChallengesContext","styles","countdownTimeout","Countdown","contextData","useContext","console","log","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","startCountdown","resetCountdown","clearTimeout","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { ChallengesContext } from '../contexts/ChallengesContext';\nimport styles from '../styles/components/Countdown.module.css';\n\nlet countdownTimeout: NodeJS.Timeout;\n\nexport function Countdown(){\n    const contextData = useContext(ChallengesContext);\n\n    console.log(contextData);\n\n    const [time, setTime] = useState(0.1 * 60);\n    const [isActive, setIsActive] = useState(false);\n    const [hasFinished, setHasFinished] = useState(false);\n\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n    function startCountdown(){\n        setIsActive(true);\n    }\n\n    function resetCountdown(){\n        clearTimeout(countdownTimeout);\n        setIsActive(false);\n        setTime(0.1 * 60);\n    }\n\n    useEffect(() => {\n        if(isActive && time > 0){\n            countdownTimeout = setTimeout(() => {\n                setTime(time - 1);\n            }, 1000)\n        }else if(isActive && time == 0){\n            setHasFinished(true);\n            setIsActive(false);\n        }\n    }, [isActive, time])\n\n    return(\n        <div>\n            <div className={styles.countdownContainer}>\n                <div>\n                    <span>{minuteLeft}</span>\n                    <span>{minuteRight}</span>\n                </div>\n                <span>:</span>\n                <div>\n                    <span>{secondLeft}</span>\n                    <span>{secondRight}</span>\n                </div>\n            </div>\n\n            {hasFinished ? (\n                <button\n                    disabled\n                    className={styles.countdownButton}\n                >\n                    Ciclo encerrado\n                </button>\n            ) : (\n                <>\n                    {isActive ? (\n                    <button\n                        type=\"button\"\n                        className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\n                        onClick={resetCountdown}\n                    >\n                        Abandonar Ciclo\n                    </button>\n\n                ) : (\n                    <button\n                        type=\"button\"\n                        className={styles.countdownButton}\n                        onClick={startCountdown}\n                    >\n                        Iniciar um ciclo\n                    </button>\n\n                )}\n                </>\n            )}\n     \n\n        </div>\n        \n    );\n}"]},"metadata":{},"sourceType":"module"}